steps:
  # Paso 1: Compilar la aplicación con Gradle usando Java 21
  - name: 'gradle:8.10.2-jdk21-corretto'  # Imagen de Gradle con JDK 21
    entrypoint: 'gradle'
    args:
      - 'clean'
      - 'build'
    dir: '.'
    secretEnv:
      - 'Z_MUSIC_TOKEN'

  # Paso 2: Construir la imagen Docker para la aplicación
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/spring-app', '.']

  # Paso 3: Subir la imagen al Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/spring-app']

    # Paso 3: Crear o actualizar el trabajo en Cloud Run según sea necesario
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if gcloud run jobs describe spring-app-job --region=us-east1 > /dev/null 2>&1; then
          echo "Updating existing job spring-app-job..."
          gcloud run jobs update spring-app-job \
            --image=gcr.io/$PROJECT_ID/spring-app \
            --region=us-east1 \
            --task-timeout=3600s \
            --memory=512Mi \
            --max-retries=3 \
            --set-secrets=Z_MUSIC_TOKEN=Z_MUSIC_TOKEN:latest
        else
          echo "Creating new job spring-app-job..."
          gcloud run jobs create spring-app-job \
            --image=gcr.io/$PROJECT_ID/spring-app \
            --region=us-east1 \
            --task-timeout=3600s \
            --memory=512Mi \
            --max-retries=3 \
            --set-secrets=Z_MUSIC_TOKEN=Z_MUSIC_TOKEN:latest
        fi
    secretEnv:
      - 'Z_MUSIC_TOKEN'

  # Paso 6: Ejecuta el trabajo en Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'jobs'
      - 'execute'
      - 'spring-app-job'
      - '--region=us-east1'
    secretEnv:
      - 'Z_MUSIC_TOKEN'

images:
  - 'gcr.io/$PROJECT_ID/spring-app'

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/Z_MUSIC_TOKEN/versions/latest
      env: 'Z_MUSIC_TOKEN'

options:
  logging: CLOUD_LOGGING_ONLY
